version: "2"
services:
  redpanda:
    image: docker.vectorized.io/vectorized/redpanda:v21.9.5
    container_name: redpanda-1
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
    ports:
    - 9092:9092
    - 29092:29092

  # rest-proxy:
  #   restart: always
  #   image: confluentinc/cp-kafka-rest:6.2.0
  #   ports:
  #     - 8082:8082
  #   hostname: rest-proxy
  #   depends_on:
  #     - redpanda
  #   container_name: rest-proxy
  #   environment:
  #     KAFKA_REST_HOST_NAME: rest-proxy
  #     KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
  #     KAFKA_REST_BOOTSTRAP_SERVERS: redpanda:9092
  #     KAFKA_REST_SECURITY_PROTOCOL: "PLAINTEXT"
  #     KAFKA_REST_SASL_MECHANISM: "PLAINTEXT"
  #     KAFKA_REST_CLIENT_BOOTSTRAP_SERVERS: redpanda:9092
  #     KAFKA_REST_CLIENT_SECURITY_PROTOCOL: "PLAINTEXT"
  #     KAFKA_REST_CLIENT_SASL_MECHANISM: "PLAINTEXT"

  streamr:
    restart: always
    image: kafka-connect-streamr
    ports:
      - 8083:8083
    # links:
    #   - rest-proxy
    environment:
      CONNECT_BOOTSTRAP_SERVERS: redpanda:29092
      CONNECT_SECURITY_PROTOCOL: PLAINTEXT
      CONNECT_GROUP_ID: test-group
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: streamr
      CONNECT_CONFIG_STORAGE_TOPIC: connect_configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect_statuses
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
      CONNECT_PRODUCER_SECURITY_PROTOCOL: "PLAINTEXT"
      CONNECT_TOPIC_REPLICATION_FACTOR: 3
    command:
      - bash
      - -c
      - |
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity